// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

namespace ItManagement
{
    public partial class SkoledbContext : DbContext
    {
        public SkoledbContext()
        {
        }

        public SkoledbContext(DbContextOptions<SkoledbContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Accesory> Accesories { get; set; }
        public virtual DbSet<Computer> Computers { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<Equipment> Equipment { get; set; }
        public virtual DbSet<Error> Errors { get; set; }
        public virtual DbSet<SmartBoard> SmartBoards { get; set; }
        public virtual DbSet<SmartPhone> SmartPhones { get; set; }
        public virtual DbSet<Tablet> Tablets { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("ProductVersion", "2.2.0-rtm-35687");

            modelBuilder.Entity<Accesory>(entity =>
            {
                entity.HasKey(e => e.Tid)
                    .HasName("PK__Accesori__C451DB31FC8D44F4");

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Computer>(entity =>
            {
                entity.HasKey(e => e.Uid)
                    .HasName("PK__Computer__C5B69A4AD5175971");

                entity.ToTable("Computer");

                entity.Property(e => e.Uid).ValueGeneratedOnAdd();

                entity.HasOne(d => d.U)
                    .WithOne(p => p.Computer)
                    .HasForeignKey<Computer>(d => d.Uid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Computer__Uid__2E1BDC42");
            });

            modelBuilder.Entity<Employee>(entity =>
            {
                entity.HasKey(e => e.Cpr)
                    .HasName("PK__Employee__C1FF93340F77CC3D");

                entity.Property(e => e.Cpr).ValueGeneratedNever();

                entity.Property(e => e.Name)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.Password)
                    .IsRequired()
                    .HasMaxLength(16)
                    .IsUnicode(false);

                entity.Property(e => e.Username)
                    .IsRequired()
                    .HasMaxLength(12)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<Equipment>(entity =>
            {
                entity.HasKey(e => e.Uid)
                    .HasName("PK__Equipmen__C5B69A4AEB236F63");

                entity.Property(e => e.Type)
                    .IsRequired()
                    .HasMaxLength(50);
            });

            modelBuilder.Entity<Error>(entity =>
            {
                entity.HasKey(e => e.Fid)
                    .HasName("PK__Errors__C1D1314A068174AF");

                entity.Property(e => e.Create).HasColumnType("datetime");

                entity.Property(e => e.ErrorMessage)
                    .IsRequired()
                    .IsUnicode(false);

                entity.Property(e => e.Update).HasColumnType("datetime");

                entity.HasOne(d => d.CprNavigation)
                    .WithMany(p => p.Errors)
                    .HasForeignKey(d => d.Cpr)
                    .HasConstraintName("FK__Errors__Cpr__2A4B4B5E");

                entity.HasOne(d => d.U)
                    .WithMany(p => p.Errors)
                    .HasForeignKey(d => d.Uid)
                    .HasConstraintName("FK__Errors__Uid__2B3F6F97");
            });

            modelBuilder.Entity<SmartBoard>(entity =>
            {
                entity.HasKey(e => e.Uid)
                    .HasName("PK__SmartBoa__C5B69A4A5704465F");

                entity.ToTable("SmartBoard");

                entity.Property(e => e.Uid).ValueGeneratedOnAdd();

                entity.HasOne(d => d.U)
                    .WithOne(p => p.SmartBoard)
                    .HasForeignKey<SmartBoard>(d => d.Uid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SmartBoard__Uid__30F848ED");
            });

            modelBuilder.Entity<SmartPhone>(entity =>
            {
                entity.HasKey(e => e.Uid)
                    .HasName("PK__SmartPho__C5B69A4A009A70D5");

                entity.ToTable("SmartPhone");

                entity.Property(e => e.Uid).ValueGeneratedOnAdd();

                entity.HasOne(d => d.U)
                    .WithOne(p => p.SmartPhone)
                    .HasForeignKey<SmartPhone>(d => d.Uid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__SmartPhone__Uid__36B12243");
            });

            modelBuilder.Entity<Tablet>(entity =>
            {
                entity.HasKey(e => e.Uid)
                    .HasName("PK__Tablet__C5B69A4A6C63D802");

                entity.ToTable("Tablet");

                entity.Property(e => e.Uid).ValueGeneratedOnAdd();

                entity.HasOne(d => d.U)
                    .WithOne(p => p.Tablet)
                    .HasForeignKey<Tablet>(d => d.Uid)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Tablet__Uid__33D4B598");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}